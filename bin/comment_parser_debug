#! /usr/bin/env ruby

$:.unshift File.expand_path('../../lib', __FILE__)
require 'comment_extractor'

class CommentExtractor::Debugger
  def initialize(file_path)
    @files = if File.file?(file_path)
               [file_path]
             elsif File.directory?(file_path)
               Dir["#{file_path}/**/*"].select { |f| File.file?(f) }
             end
    @debug = Hash.new { |h,k| h[k] = [] }
  end

  def parse_all_files
    @files.each do |file|
      parse_file(file)
    end

    puts "Parser is not found"
    puts @debug[:parser_not_found].join("\n")
  end

  def parse_file(file_path)
    puts "Open: #{file_path}"

    if parser = CommentExtractor::Parser.for(file_path)
      puts "Use: #{parser.extractor.class}"
      comments = parser.extract_comments
    else
      @debug[:parser_not_found] << file_path
    end
  end
end

CommentExtractor.configure do |c|
  c.use_default_extractor = false
end

file_path = ARGV.first
exit unless file_path

debugger = CommentExtractor::Debugger.new(file_path)
debugger.parse_all_files
